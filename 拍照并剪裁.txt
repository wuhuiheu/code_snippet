
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;

import android.app.Activity;
import android.content.Intent;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.ImageView;

public class MainActivity extends Activity{

	public final static int PHOTO_ZOOM = 0;
	public final static int TAKE_PHOTO = 1;
	public final static int PHOTO_RESULT = 2;
	public static final String IMAGE_UNSPECIFIED = "image/*";
	private ImageView avatar;
	private File mTempPicFile;//临时用于存放拍照所生成的的文件
	@Override
	public void onCreate(Bundle savedInstanceState){
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.activity_main);

		avatar = (ImageView) findViewById(R.id.ret_imgv);
		// 本地图库选择按钮

		findViewById(R.id.sel_pic_btn).setOnClickListener(new OnClickListener(){

			@Override
			public void onClick(View v){
				Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
				intent.setType(IMAGE_UNSPECIFIED);
				Intent wrapperIntent = Intent.createChooser(intent, null);
				startActivityForResult(wrapperIntent, PHOTO_ZOOM);
			}
		});
		// 拍照按钮

		findViewById(R.id.capture_pic_btn).setOnClickListener(new OnClickListener(){

			@Override
			public void onClick(View v){
				try{
					mTempPicFile = createImageFile();
					Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
					intent.putExtra(MediaStore.EXTRA_OUTPUT,
			                Uri.fromFile(mTempPicFile));
					startActivityForResult(intent, TAKE_PHOTO);
				}
				catch(Exception e){
					e.printStackTrace();
				}
				
			}
		});
	}

	// 图片缩放
	public void photoZoom(Uri uri){
		Intent intent = new Intent("com.android.camera.action.CROP");
		intent.setDataAndType(uri, IMAGE_UNSPECIFIED);
		intent.putExtra("crop", "true");
		// aspectX aspectY 是宽高的比例
		intent.putExtra("aspectX", 1);
		intent.putExtra("aspectY", 1);
		// outputX outputY 是裁剪图片宽高
		intent.putExtra("outputX", 250);
		intent.putExtra("outputY", 250);
		intent.putExtra("return-data", true);
		startActivityForResult(intent, PHOTO_RESULT);
	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data){
		if(resultCode == RESULT_OK){
			if(requestCode == PHOTO_ZOOM){
				photoZoom(data.getData());
			}
			if(requestCode == TAKE_PHOTO){
				photoZoom(Uri.fromFile(mTempPicFile));
			}

			if(requestCode == PHOTO_RESULT){
				Bundle extras = data.getExtras();
				if(extras != null){
					Bitmap photo = extras.getParcelable("data");
					ByteArrayOutputStream stream = new ByteArrayOutputStream();
					photo.compress(Bitmap.CompressFormat.JPEG, 75, stream);
					avatar.setImageBitmap(photo);
				}
			}
		}
		super.onActivityResult(requestCode, resultCode, data);
	}
	
	public static File createImageFile() throws Exception{
        String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date());
        String imageFileName = "JPEG_" + timeStamp + "_";
        File storageDir = Environment.getExternalStoragePublicDirectory(
                Environment.DIRECTORY_PICTURES);
        if(!storageDir.exists()){
            storageDir.mkdirs();
        }
        File image = File.createTempFile(
                imageFileName,  /* prefix */
                ".jpg",         /* suffix */
                storageDir      /* directory */
        );
        return image;
    }

}
